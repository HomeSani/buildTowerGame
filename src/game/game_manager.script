_G.tower_blocks = {}
_G.pixel_scale = 2.6

local score = 0

local CRAINE_HEIGHT = 123
local CRAINE_LEFT_LIMIT = 100
local CRAINE_RIGHT_LIMIT = 540
local BLOCK_TOWER_HEIGHT = 64

function move_up(self)
	local new_craine_pos_y = go.get_position("/craine").y + (BLOCK_TOWER_HEIGHT * _G.pixel_scale)
	
	self.spawn_pos.y = new_craine_pos_y - (CRAINE_HEIGHT * _G.pixel_scale) + 30

	go.animate("/craine", "position.y", go.PLAYBACK_ONCE_FORWARD, new_craine_pos_y, go.EASING_LINEAR, 0.5)
end

function create_tower_block(self)
	local tower_block = factory.create("/tower_factory#factory", self.spawn_pos, nil, nil, vmath.vector3(_G.pixel_scale, _G.pixel_scale, _G.pixel_scale))
	go.animate(tower_block, "position.x", go.PLAYBACK_LOOP_PINGPONG, CRAINE_RIGHT_LIMIT, go.EASING_LINEAR, 3.5)

	go.set_position(vmath.vector3(CRAINE_LEFT_LIMIT, go.get_position("/craine").y, 0), "/craine")
	go.animate("/craine", "position.x", go.PLAYBACK_LOOP_PINGPONG, CRAINE_RIGHT_LIMIT, go.EASING_LINEAR, 3.5)

	table.insert(_G.tower_blocks, tower_block)

	return tower_block
end

function init(self)
	msg.post(".", "acquire_input_focus")
	msg.post("@render:", "use_fixed_fit_projection", { near = -1, far = 1 })

	self.score = 0
	
	self.spawn_pos = vmath.vector3(CRAINE_LEFT_LIMIT, go.get_position("/craine").y-(CRAINE_HEIGHT * _G.pixel_scale)+30, 0)

	-- crete first block
	local tower_block = factory.create("/tower_factory#factory", vmath.vector3(320, 131, 0), nil, nil, vmath.vector3(_G.pixel_scale, _G.pixel_scale, _G.pixel_scale))
	msg.post(tower_block, "start_falling")
	table.insert(_G.tower_blocks, tower_block)
end

function on_input(self, action_id, action)
	if action_id == hash("touch") and action.pressed then
		go.cancel_animations(self.tower_block, "position.x")
		go.cancel_animations("/craine", "position.x")
		msg.post(self.tower_block, "start_falling")

		move_up(self)
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("tower_is_stand") then
		self.tower_block = create_tower_block(self)

		if not(#_G.tower_blocks == 2) then
			score = score + 1
		end
		
		msg.post("/gui", "update_score", {score = score})
	end	
end